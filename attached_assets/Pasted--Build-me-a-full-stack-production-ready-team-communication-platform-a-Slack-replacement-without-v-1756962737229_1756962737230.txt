
Build me a full-stack, production-ready team communication platform (a Slack replacement, without video/voice calls for now).

Core Requirements:

Authentication system (email/password).

Workspace and Team Management system:

Create and join workspaces.

Invite users via email.

Workspace-level permissions (admin, member, guest).

Channels & Threads:

Public and private channels.

Threaded conversations inside channels.

@mentions, reactions using emojis, and pinned messages.

Direct Messaging (1:1 and group DMs).

File Sharing & Storage:

Upload and preview images, PDFs, and docs.

Cloud-based storage integration (e.g., AWS S3 or equivalent).

Notifications:

Real-time notifications for mentions, DMs, and channel updates.

Email + push notifications.

Search functionality:

Powerful search system across messages, files, and users.

Integrations support (basic placeholders for now, e.g., pulling in GitHub issues or Google Drive links).

Responsive and mobile-first design — should adapt seamlessly to desktop, tablet, and mobile.

Technology Stack (suggested, adjust if needed):

Frontend: React (Next.js or Vite) with TypeScript, Tailwind CSS (or Chakra UI) for styling. UX must be cleaner, simpler, and more intuitive than Slack (think a balance of Notion + Linear + Slack). Dark/light themes built-in. Responsive design a must.

Backend: Node.js + Express (or NestJS).

Database: PostgreSQL (with Prisma ORM).

Authentication & Authorization: JWT + OAuth2 + Role-based access control.

Real-time features: WebSockets (Socket.IO) or WebRTC DataChannels for live updates in chat.

Deployment: Dockerized, scalable on Replit/Render/Vercel + cloud DB.

UI/UX Direction:

Should not look like Slack. Instead, design a clean, futuristic UI with productivity-focused interactions. Example inspirations: Linear.app fluidity, Notion’s simplicity, Figma’s modern design system.

Add powerful keyboard shortcuts for navigation.

Collapsible sidebar, minimal distractions, focus on content.

Components should feel snappy, performant, and mobile-friendly.

Deliverables:

Full-stack codebase (frontend + backend).

Pre-configured DB schema for workspaces, users, channels, messages, threads, integrations.

Authentication & role-based permission system.

Responsive UI components with dark/light toggle.

API documentation (OpenAPI/Swagger).

Instructions to run locally and deploy to production.

Future-proofing:

Leave integration hooks for voice/video calling in the future.

Make system modular so plugins/integrations can be added easily.